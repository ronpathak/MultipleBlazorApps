@page "/note/index"
@using MultiBlazorApps.Components.Shared.Components
@inject INoteRepository noteRepository
@inject NavigationManager navigationManager
@attribute [Authorize]

<h3>Index Note</h3>

<div class="container">
    <table class="table table-hover">
        <colgroup>
            <col style="width:5%; text-align:left;">
            <col style="width:60%; text-align:left;">
            <col style="width:25%; text-align:left;">
            <col style="width:5%; text-align:center;">
            <col style="width:5%; text-align:center;">
        </colgroup>
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Company</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Notes)
            {

                <tr>
                    <td>@item.Id</td>
                    <td @onclick="@(() => GetItem(item.Id))">@item.Title</td>

                    @*<td> <button class="btn btn-info" @onclick="@(() => EditItem(item.Id))">Edit</button></td>
                        <td><button class="btn btn-danger" @onclick="@(() => DeleteItem(item.Id))">Delete</button></td>*@
                </tr>
            }

        </tbody>
    </table>
</div>

<ConfirmationModal @ref="Details" onCancel="ModalCancel">
    <RFConfirmationContent>
        <p>@note.Title</p>
    </RFConfirmationContent>
</ConfirmationModal>


@code {

    public List<Note> Notes = new List<Note>();
    public Note note = new Note();
    ConfirmationModal Details;

    protected override async Task OnInitializedAsync()
    {
        Notes = await noteRepository.GetNotes();
    }


    public async Task GetItem(int Id)
    {
        note = await noteRepository.GetNote(Id);
        Details.Show();
    }

    void ModalCancel()
    {
        Details.Hide();
    }


}